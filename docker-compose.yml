services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: stm-database
    environment:
      POSTGRES_DB: smart_task_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SMART_TASK_DB_PASSWORD:-localdev123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backups:/backups
      - ./data/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./data/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "${DATABASE_PORT:-5433}:${DATABASE_CONTAINER_PORT:-5432}"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smart_task_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - stm-network

  # Backend API
  backend:
    build:
      context: ./backend
    container_name: stm-backend
    env_file:
      - ./.env.ports
      - ./.env
    environment:
      # Ensure FastAPI listens on 0.0.0.0
      - HOST=0.0.0.0
      - PORT=${BACKEND_CONTAINER_PORT:-8000}
      # Override database URL to use local PostgreSQL
      - DATABASE_URL=postgresql://postgres:${SMART_TASK_DB_PASSWORD:-localdev123}@database:5432/smart_task_management
      - DIRECT_URL=postgresql://postgres:${SMART_TASK_DB_PASSWORD:-localdev123}@database:5432/smart_task_management
      # CORS configuration from .env.ports
      - BACKEND_CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:8086,http://127.0.0.1:8086,http://localhost:5173,http://localhost:5174}
    ports:
      - "${BACKEND_PORT:-9200}:${BACKEND_CONTAINER_PORT:-8000}"
    volumes:
      - uploaded_files:/app/uploads
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - stm-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${API_URL:-http://localhost:9200}
        - VITE_WS_URL=${WS_URL:-ws://localhost:9200}
    container_name: stm-frontend
    env_file:
      - ./.env.ports
    environment:
      - VITE_API_URL=${API_URL:-http://localhost:9200}
      - VITE_WS_URL=${WS_URL:-ws://localhost:9200}
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-8086}:${FRONTEND_CONTAINER_PORT:-80}"
    restart: unless-stopped
    networks:
      - stm-network

volumes:
  postgres_data:
    driver: local
    name: stm_postgres_data
  postgres_backups:
    driver: local
    name: stm_postgres_backups
  uploaded_files:
    driver: local
    name: stm_uploaded_files

networks:
  stm-network:
    driver: bridge
  default:
    name: stm-network
